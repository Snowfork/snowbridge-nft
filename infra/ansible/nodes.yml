- hosts: parachain
  serial: 1
  order: sorted
  vars:
    relaychain_bootnodes: "/ip4/{{ hostvars['relaychain-node-0'].private_ip_address }}/tcp/30333/p2p/{{ hostvars['relaychain-node-0'].peer_id }}"
    bootnodes: "/ip4/{{ hostvars['parachain-node-0'].private_ip_address }}/tcp/30333/p2p/{{ hostvars['parachain-node-0'].peer_id }}"

  tasks:
    - name: Basic preparation
      import_tasks: tasks/base.yml

    - name: Set hostname
      hostname:
        name: "{{ inventory_hostname }}"

    - name: Create user
      user:
        name: artemis
        system: yes
        home: /var/lib/artemis
        create_home: no
        shell: /usr/sbin/nologin

    - name: Make data directory
      file:
        path: /var/lib/artemis
        state: directory
        owner: artemis
        group: artemis

    - name: Download collator
      amazon.aws.aws_s3:
        bucket: snowfork-rococo
        object: artemis
        dest: /usr/local/bin/artemis
        mode: get

    - name: Make collator executable
      file:
        path: /usr/local/bin/artemis
        mode: "0755"

    - name: Download parachain chainspec
      amazon.aws.aws_s3:
        bucket: snowfork-rococo
        object: artemis-rococo.json
        dest: /etc/artemis-rococo.json
        mode: get

    - name: Download relaychain chainspec
      amazon.aws.aws_s3:
        bucket: snowfork-rococo
        object: rococo-local.json
        dest: /etc/rococo-local.json
        mode: get

    - name: Create service file
      template:
        src: collator.service.j2
        dest: /etc/systemd/system/artemis.service
        owner: root
        group: root
        mode: 0644
      notify: Restart collator

    - name: Make sure service is running
      systemd:
        name: artemis
        state: started
        enabled: yes

    - name: Pause for 10 seconds
      pause:
        seconds: 10

  handlers:
    - name: Restart collator
      systemd:
        name: artemis
        state: restarted
        daemon_reload: yes
